// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  nickname  String // User's nickname
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  budgets     Budget[]      @relation("UserBudgets")
  Transaction Transaction[] @relation
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String // Category name
  parentId Int? // Parent category ID
  parent   Category?  @relation("CategoryParent", fields: [parentId], references: [id])
  children Category[] @relation("CategoryParent") // Children categories

  Budget      Budget[]      @relation
  Transaction Transaction[] @relation
}

model Budget {
  id         Int      @id @default(autoincrement())
  categoryId Int? // Null for full category
  amount     Float // Budget amount
  startDate  DateTime // Budget start date
  endDate    DateTime // Budget end date
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  users    User[]    @relation("UserBudgets")
  category Category? @relation(fields: [categoryId], references: [id])
}

model Transaction {
  id          Int      @id @default(autoincrement())
  userId      Int // User ID
  categoryId  Int // Category of the transaction (mandatory)
  amount      Float // Transaction amount
  description String?  @db.VarChar(255) // Optional description
  date        DateTime // Transaction date
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
}
